---
# Beispiele für die Module:
# - copy, template, file
# - stat
# - lineinfile, blockinfile
# - replace
# - unarchive
#
# Weitere beachtenswerte Module in dieser Klasse
# - ansible.posix.al - File-ACL verwalten
# - fetch - wie copy, nur anders herum
# - assemble - Dateifragmente zusammensetzen
# - find - das find-Kommando als Modul
# - communit.general.ini_fi8le - Inhalte von INI-Dateien verwalten
# - ansible.posix.synchronize - das rsync-Kommando als Modul
# - tmepfile - temporäre Dateien und Verzeichnisse erzeugen
# - community.general.xml - Inhalte von XML-Dateien verwalten
# - community.general.pamd - PAM-Konfigurationen verwalten
- hosts: all

  vars:
    greeting: Hello World!

  tasks:
    # src is searched in dir files/ relative playbook, then relative to playbook
    - name: Beispieldatei "test1.txt" zum Zielhost kopieren
      ansible.builtin.copy:
        src: test.sh
        dest: /tmp

    - name: Dabei auch Zugriffs- unmd Eigentumsrechte verwalten
      ansible.builtin.copy:
        src: test.sh
        dest: /tmp
        owner: root
        group: root
        mode: 0755

    - name: Template füllen und hochladen
      ansible.builtin.template:
        src: index.html.j2
        dest: /srv/www/htdocs/index.html
      when: ansible_os_family == "Suse"

    - name: Zugriffs- und Eigentumsrechte setzen
      ansible.builtin.file:
        path: /etc/ssl/private
        owner: root
        group: ssl-cert
        mode: 0710
      when: ansible_os_family == "Debian"

    - name: Einen Symlink erzeugen
      ansible.builtin.file:
        src: /usr/bin/bash
        dest: /root/mybash
        state: link


    - name:  Dateieigenschaften von /etc/ssl bestimmen
      ansible.builtin.stat:
        path: /etc/ssl
      register: p

    - ansible.builtin.debug:
        msg: /etc/ssl is ein existierendes Verzeichnis
      when: p.stat.exists and p.stat.isdir

    - ansible.builtin.debug: var=p
      run_once: true


    - name: Zeile andern
      ansible.builtin.lineinfile:
        path: /etc/selinux/config
        regexp: '^SELINUX='
        line: 'SELINUX=disabled'
      when: ansible_os_family != "Debian"

    - name: Konfiguration für virtuelles Interface intragen
      ansible.builtin.blockinfile:
        path: /etc/network/interfaces
        block: |
          iface ens33:0 inet static
              address 10.0.0.1/24
        # optionale Parameter:
        marker: "# {mark} Virtuelles Iface für XY"
        state: present
      when: ansible_distribution == "Debian"

    - name: PasswordAuthenticaton ggf. einkommentieren und auf "no" setzen
      ansible.builtin.replace:
        path: /etc/ssh/sshd_config
        regexp: '^#?(PasswordAuthentication).*'
        replace: '\1 no'

    - name: Archive-Datei in /srv/www/webapps auspacken
      ansible.builtin.unarchive:
        src: 'test.tar.gz'
        dest: /var/www/html
        owner: www-data
        group: www-data
        creates: '/var/www/html/test'
      when: ansible_os_family == "Debian"
